#!/bin/sh

# chkconfig: - 98 06
# description: Donomo Archive Web Application
# pidfile: /var/run/donomo/application.pid

source /etc/rc.d/init.d/functions

workdir=/var/lib/donomo
pidfile=/var/run/donomo/application.pid
logfile=/var/log/donomo/application.log
socket=$workdir/fcgi.sock
prog="Donomo-WebApp"

##############################################################################
#
# Common function to setup the environment variables that the
# application expects to have
#

function setup_env
{
    export USER=donomo
    export LOGNAME=$USER
    export HOME=/home/$USER
    export DONOMO_HOME=$HOME

    source $DONOMO_HOME/bin/env.sh
}

##############################################################################
#
# Start the application if it isn't already running
#

function start
{
    pid=$(pidofproc -p "$pidfile" "$prog")
    if [[ -n "$pid" ]]
    then
        echo -n "- Already running: pid=$pid"
        return 1
    fi

    setup_env

    /bin/su -c "python -m donomo.manage runfcgi protocol=fcgi method=prefork daemonize=true pidfile=$pidfile socket=$socket workdir=$workdir outlog=$logfile errlog=$logfile" donomo

    if [[ $? -ne 0 ]]
    then
        return 2
    fi

    # Give the process time to create the socket
    sleep 2

    chown donomo:nginx $socket
    if [[ $? -ne 0 ]]
    then
        stop
        return 3
    fi

    chmod 770 $socket
    if  [[ $? -ne 0 ]]
    then
        stop
        return 4
    fi

    return 0
}

##############################################################################
#
#
#

function stop
{
    killproc -p $pidfile
}
##############################################################################
#
# Run an application shell or database shell
#

function run_shell
{
    setup_env

    exec /bin/su -c "python -m donomo.manage ${1:?}" donomo
}

##############################################################################
#
# Dispatch requested behaviour
#

case ${1:?} in
    syncdb|dbshell|shell)
        run_shell $1
        ;;
    start)
        action "Starting $prog" start
        /sbin/service nginx start
        ;;
    stop)
        /sbin/service nginx stop
        action "Stopping $prog" stop
        ;;
    status)
        status -p $pidfile "$prog"
        /sbin/service nginx status
        ;;
    restart)
        $0 stop
        $0 start
        ;;
    *)
        echo "Usage: $(basename $0) syncdb|dbshell|shell|start|status|stop|restart"
        exit 1
        ;;
esac
